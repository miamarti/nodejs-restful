
/**
 * After a tag is voted on, update the list of tags.
 * This is cached for when the client wants to access the current tags.
 */

var co = require('co')

var redis = require('../databases/redis')
var syndicate = require('../syndicate')
var onerror = require('../onerror')

syndicate.on('tally', function (options, votes) {
  var thing = options.thing
  if (thing.collection !== 'tags') return
  update(thing, options.type, votes).catch(onerror)
})

var update = module.exports = co.wrap(function* (tag, type, votes) {
  var parent_id = tag.parent._id.toHexString()
  var child_id = tag.child._id.toHexString()
  var score = votes.score.wilson.up
  var net = votes.score.net

  var tag_key = 'tags:' + parent_id + ':' + type + ':' + tag.child.collection
  // not sure how to store tagged, but whatever
  var tagged_key = 'tagged:' + child_id + ':' + type + ':' + tag.parent.collection

  var promises = []

  if (net > 0) {
    promises.push(redis.zadd(tag_key, score, child_id))
    promises.push(redis.zadd(tagged_key, score, parent_id))
  } else {
    promises.push(redis.zrem(tag_key, child_id))
    promises.push(redis.zrem(tagged_key, parent_id))
  }

  yield promises
})
