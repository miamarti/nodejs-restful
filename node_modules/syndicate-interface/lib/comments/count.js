
/**
 * Count comments.
 */

var mdb = require('../databases/mongodb')

// all the comment descendants of something
exports.descendants = function (thing) {
  if (thing.collection !== 'comments') {
    return mdb.comments.find({
      deleted: false,
      closed: false,
      'root._id': thing._id,
      'id.ancestors.0': thing._id
    }).count()
  }

  // match by root
  var query = mdb.comments.find({
    deleted: false,
    closed: false,
  })

  filterByParentComment(query, thing)

  return query.count()
}

// only the next-level replies
exports.replies = function (thing) {
  var query = mdb.comments.find({
    deleted: false,
    closed: false,
    'parent._id': thing._id
  })

  if (thing.collection === 'comments') {
    filterByParentComment(query, thing)
  } else {
    query.set('root._id', thing._id)
  }

  return query.count()
}

// match by all ancestor IDs,
// which will allow flexible indexes
function filterByParentComment(query, comment) {
  // match by all ancestor IDs,
  // which will allow flexible indexes
  comment.id.ancestors.forEach(function (ancestor_id, i) {
    query.set('id.ancestors.' + i, ancestor_id)
  })
  // always match the root
  query.set('root._id', comment.root._id)
}
