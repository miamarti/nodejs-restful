
/**
 * Create a bookmark.
 */

var mdb = require('../databases/mongodb')
var redis = require('../databases/redis')
var syndicate = require('../syndicate')

module.exports = function* (options) {
  var user = options.user
  var thing = options.thing
  var type = options.type
  var value = options.value = !!options.value

  var promises = []

  if (value) {
    promises.push(mdb.bookmarks.findOne({
      'user._id': user._id,
      'thing._id': thing._id,
      type: type
    }).upsert({
      $setOnInsert: {
        'thing.collection': thing.collection,
        'date.created': new Date()
      }
    }))
  } else {
    promises.push(mdb.bookmarks.remove({
      'user._id': user._id,
      'thing._id': thing._id,
      type: type
    }))
  }

  var user_id = user._id.toHexString()
  var thing_id = thing._id.toHexString()
  var bookmarker_key = 'bookmarker:' + type + ':' + thing.collection + ':' + user_id
  var bookmarkee_key = 'bookmarkee:' + type + ':' + thing_id
  if (value) {
    promises.push(redis.zadd(bookmarker_key, Date.now(), thing_id))
    promises.push(redis.zadd(bookmarkee_key, Date.now(), user_id))
  } else {
    promises.push(redis.zrem(bookmarker_key, thing_id))
    promises.push(redis.zrem(bookmarkee_key, user_id))
  }

  yield promises

  syndicate.emit('bookmark', options)
}
